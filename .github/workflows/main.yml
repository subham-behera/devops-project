name: Test, Scan and Build

on:
  push:
    branches:
      - main
    paths:
      - '**/*'

permissions:
  contents: write

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

    # Setup Docker Buildx
    - name: Docker Setup
      uses: docker/setup-buildx-action@v2

    # Login to Docker Hub
    - name: Docker Credentials
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Generate a timestamp-based version tag
    - name: Docker tag
      id: version
      run: |
        VERSION=v$(date +"%Y%m%d%H%M%S")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Build the Docker Image
    - name: Build Docker Image
      run: |
        docker build -t devsubham09/demo-vite:${{ env.VERSION }} .

    # Trivy Scan
    - name: Run Trivy Image Scan (JSON Output)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: devsubham09/demo-vite:${{ env.VERSION }}
        format: 'json'
        output: trivy-report.json
        severity: 'CRITICAL,HIGH'
        exit-code: '0'  # Don't fail the job on findings

    - name: Upload Trivy Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.json

    # Push Docker Image
    - name: Push Docker Image
      run: |
        docker push devsubham09/demo-vite:${{ env.VERSION }}

    # Update Kubernetes Manifest
    - name: Update K8s Manifests
      run: |
        sed -i "s|image: devsubham09/demo-vite:.*|image: devsubham09/demo-vite:${{ env.VERSION }}|g" k8s/deployment.yaml
        cat k8s/deployment.yaml

    # Install kubectl and sealed secrets CLI
    - name: Setup kubectl & kubeseal
      run: |
        KUBE_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)
        curl -LO "https://dl.k8s.io/release/${KUBE_VERSION}/bin/linux/amd64/kubectl"
        chmod +x kubectl && sudo mv kubectl /usr/local/bin/

        wget https://github.com/bitnami-labs/sealed-secrets/releases/latest/download/kubeseal-linux-amd64
        chmod +x kubeseal-linux-amd64 && sudo mv kubeseal-linux-amd64 /usr/local/bin/kubeseal

    # Setup Kubeconfig
    - name: Configure Kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > ~/.kube/config

    # Apply sealed secrets and deployment
    - name: Apply Sealed Secrets and Deploy
      run: |
        kubectl apply -f k8s/sealed-secret.yaml
        kubectl apply -f k8s/deployment.yaml

    # Upload sealed secret artifact
    - name: Upload sealed secret artifact
      uses: actions/upload-artifact@v4
      with:
        name: sealed-secret
        path: k8s/sealed-secret.yaml

    # Commit changes to GitHub
    - name: Commit the changes
      run: |
        git config --global user.email "bot@github.com"
        git config --global user.name "GitHub Actions Bot"
        git checkout main
        git add k8s/deployment.yaml
        git commit -m "CI: Update deployment.yaml with image version ${{ env.VERSION }}"
        git push origin main

    # Run tfsec via CLI and save JSON output to file
    - name: Run tfsec and save report
      run: |
        curl -sSL https://github.com/aquasecurity/tfsec/releases/latest/download/tfsec-linux-amd64 -o tfsec
        chmod +x tfsec
        sudo mv tfsec /usr/local/bin/
        tfsec --format json --out tfsec-report.json ./terraform || true

    - name: Upload tfsec report
      uses: actions/upload-artifact@v4
      with:
        name: tfsec-report
        path: tfsec-report.json
